From 38b667690b2a730028597ed8d22fc9ac265955de Mon Sep 17 00:00:00 2001
From: Srevin Saju <srevin03@gmail.com>
Date: Sun, 29 Dec 2019 22:10:26 +0300
Subject: [PATCH 4/4] Remove profiling module

---
 ninja_profiling/__init__.py           |   0
 ninja_profiling/typing_performance.py | 109 --------------------------
 2 files changed, 109 deletions(-)
 delete mode 100644 ninja_profiling/__init__.py
 delete mode 100755 ninja_profiling/typing_performance.py

diff --git a/ninja_profiling/__init__.py b/ninja_profiling/__init__.py
deleted file mode 100644
index e69de29b..00000000
diff --git a/ninja_profiling/typing_performance.py b/ninja_profiling/typing_performance.py
deleted file mode 100755
index 66401495..00000000
--- a/ninja_profiling/typing_performance.py
+++ /dev/null
@@ -1,109 +0,0 @@
-#!/usr/bin/env python3
-# -*- coding: utf-8 -*-
-#
-# This file is part of NINJA-IDE (http://ninja-ide.org).
-#
-# NINJA-IDE is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 3 of the License, or
-# any later version.
-#
-# NINJA-IDE is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with NINJA-IDE; If not, see <http://www.gnu.org/licenses/>.
-
-import sys
-from unittest import mock
-import time
-
-from PyQt5.QtWidgets import QApplication
-
-from PyQt5.QtCore import QTimer
-from PyQt5.QtCore import Qt
-
-from PyQt5.QtTest import QTest
-
-sys.path.append("..")
-
-from ninja_ide.tools import json_manager
-from ninja_ide import resources
-
-from ninja_ide.core.file_handling import nfile
-from ninja_ide.gui.editor import neditable
-from ninja_ide.gui.editor.editor import NEditor
-from ninja_ide.gui.syntax_registry import syntax_registry  # noqa
-from ninja_ide.gui.ide import IDE
-
-json_manager.load_syntax()
-themes = json_manager.load_editor_schemes()
-resources.COLOR_SCHEME = themes["Ninja Dark"]
-
-qapp = QApplication(sys.argv)
-IDE.register_service("ide", mock.Mock())
-
-ninja_editor = NEditor(neditable=neditable.NEditable(nfile.NFile()))
-ninja_editor.side_widgets.remove("CodeFoldingWidget")
-ninja_editor.side_widgets.remove("MarkerWidget")
-ninja_editor.side_widgets.remove("TextChangeWidget")
-ninja_editor.side_widgets.update_viewport()
-ninja_editor.side_widgets.resize()
-ninja_editor.register_syntax_for()
-ninja_editor.showMaximized()
-
-
-click_times = {}
-
-with open(sys.argv[1]) as fp:
-    text = fp.read()
-
-
-def click(key):
-    clock_before = time.clock()
-
-    if isinstance(key, str):
-        QTest.keyClicks(ninja_editor, key)
-    else:
-        QTest.keyClick(ninja_editor, key)
-    while qapp.hasPendingEvents():
-        qapp.processEvents()
-
-    clock_after = time.clock()
-    ms = int((clock_after - clock_before) * 100)
-    click_times[ms] = click_times.get(ms, 0) + 1
-
-
-def test():
-    clock_before = time.clock()
-
-    for line in text.splitlines():
-        indent_width = len(line) - len(line.lstrip())
-        while ninja_editor.textCursor().positionInBlock() > indent_width:
-            click(Qt.Key_Backspace)
-        for i in range(
-                indent_width - ninja_editor.textCursor().positionInBlock()):
-            click(Qt.Key_Space)
-
-        line = line[indent_width:]
-        for char in line:
-            click(char)
-        click(Qt.Key_Enter)
-
-    clock_after = time.clock()
-    typing_time = clock_after - clock_before
-    print("Typed {} chars in {} sec. {} ms per character".format(
-        len(text), typing_time, typing_time * 1000 / len(text)))
-    print("Time per click: Count of clicks")
-
-    click_time_keys = sorted(click_times.keys())
-    for click_time_key in click_time_keys:
-        print("     %5dms:      %4d" % (
-            click_time_key, click_times[click_time_key]))
-    qapp.quit()
-
-
-QTimer.singleShot(0, test)
-qapp.exec_()
-- 
2.24.1

